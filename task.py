#!/usr/bin/env python
# encoding: utf-8

from Crypto.Util.number import *
import sympy
import gmpy2
# from secret import flag
import os
import math
from decimal import Decimal


def generate():
    p = getPrime(512)
    q = p
    for _ in range(20):
        q = sympy.nextprime(q)
    return p, q


# flag = flag + os.urandom(112 - len(flag))
# p, q = generate()
# N = p * p * q
# e = 10
# m = bytes_to_long(flag)
# print N
# print pow(m, e, N)
# 916098343256886730944510457500636066042550897566697519166439077921880517818723610459519998191154652706280162530708255808000832915454378062638485564511370634262761437405376296615444210413833377640272542414944890752589005473286961694167991683902793758158546427052807485163403019291663134430450857827023464032398345580086579221885163517238409339197642595487647481640839504615108761163698059701625974156132665956711580028128914435838573490062896810068318570539279251
# 593374655098354029973657738000384923954323974135797324572669214179228540018644763059253054003234397996556957826906394001548391372398143831148117207907587105991747065773200185100142684355779804977386676855817111318853299124487388452492657877402862627678522265730194699267130340372180252001615808112408300545429808796905669080329221336323137969433010064020781830966826802738667022578086469947192393104531101198480473908696128325970760898947960020845547015072821358
